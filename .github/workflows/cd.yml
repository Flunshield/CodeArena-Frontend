name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: ⏳ Checkout du code
        uses: actions/checkout@v2

      - name: ⏳ Récupérer la variable d'environnement VITE_API_BASE_URL_BACK
        env:
          VITE_API_BASE_URL_BACK: ${{ secrets.VITE_API_BASE_URL_BACK }}
        run: echo "VITE_API_BASE_URL_BACK=${VITE_API_BASE_URL_BACK}" >> .env

      - name: ⏳ Afficher le contenu du fichier .env
        run: cat .env

      - name: 🚧 Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: ⏳ List the state of node modules
        continue-on-error: true
        run: npm list

      - name: ⏳ Install dependencies
        run: npm install

      - name: ⏳ Lintage du code
        run: npm run lint

      - name: 🚀 Lancement du projet en arrière-plan
        run: |
          npm run dev &
          sleep 30  # Attendre quelques secondes pour que le projet démarre complètement

      - name: 🚧 Exécuter les tests
        run: |
          npx cypress run

  release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '20.8.1'
      - name: Install dependencies
        run: npm install
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Run standard-version
        run: npx standard-version
      - name: Push changes
        run: |
          git push --follow-tags origin main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  deploy:
    needs: release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.release.result == 'success'
    steps:
      - uses: actions/checkout@v2
      - name: Récupérer la variable d'environnement VITE_API_BASE_URL_BACK
        run: echo "VITE_API_BASE_URL_BACK=${{ secrets.VITE_API_BASE_URL_BACK }}" >> .env
        env:
          VITE_API_BASE_URL_BACK: ${{ secrets.VITE_API_BASE_URL_BACK }}
      - name: Déploiement sur le VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd front-app/
            docker compose down
            git pull
            docker compose up --build -d
